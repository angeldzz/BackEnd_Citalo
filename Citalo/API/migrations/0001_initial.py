# Generated by Django 5.2 on 2025-08-26 17:59

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaNegocio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('icono', models.CharField(blank=True, help_text='Clase CSS o nombre del icono', max_length=50)),
                ('activa', models.BooleanField(default=True)),
                ('orden', models.PositiveIntegerField(default=0, help_text='Orden de visualización')),
                ('duracion_cita_default', models.PositiveIntegerField(default=30, help_text='Duración por defecto de las citas en minutos')),
                ('permite_citas_online', models.BooleanField(default=True)),
                ('requiere_confirmacion', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Categoría de Negocio',
                'verbose_name_plural': 'Categorías de Negocio',
                'db_table': 'categorias_negocio',
                'ordering': ['orden', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionPlataforma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clave', models.CharField(max_length=100, unique=True)),
                ('valor', models.TextField()),
                ('descripcion', models.TextField(blank=True)),
                ('tipo_dato', models.CharField(choices=[('string', 'Texto'), ('integer', 'Entero'), ('float', 'Decimal'), ('boolean', 'Booleano'), ('json', 'JSON')], default='string', max_length=20)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuración de Plataforma',
                'verbose_name_plural': 'Configuraciones de Plataforma',
                'db_table': 'configuracion_plataforma',
            },
        ),
        migrations.CreateModel(
            name='Negocio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True)),
                ('slug', models.SlugField(help_text='URL amigable para el negocio', max_length=200, unique=True)),
                ('telefono', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('sitio_web', models.URLField(blank=True)),
                ('direccion', models.TextField()),
                ('ciudad', models.CharField(max_length=100)),
                ('provincia', models.CharField(blank=True, max_length=100)),
                ('codigo_postal', models.CharField(blank=True, max_length=10)),
                ('latitud', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='negocios/logos/')),
                ('imagen_portada', models.ImageField(blank=True, null=True, upload_to='negocios/portadas/')),
                ('zona_horaria', models.CharField(default='Europe/Madrid', max_length=50)),
                ('tiempo_anticipacion_minimo', models.PositiveIntegerField(default=60, help_text='Tiempo mínimo de anticipación para reservar cita (minutos)')),
                ('tiempo_cancelacion_limite', models.PositiveIntegerField(default=120, help_text='Tiempo límite para cancelar una cita sin penalización (minutos)')),
                ('permite_reservas_multiples', models.BooleanField(default=False)),
                ('estado_suscripcion', models.CharField(choices=[('activa', 'Activa'), ('pendiente_pago', 'Pendiente de Pago'), ('suspendida', 'Suspendida'), ('cancelada', 'Cancelada'), ('prueba', 'Período de Prueba')], default='pendiente_pago', max_length=20)),
                ('fecha_inicio_suscripcion', models.DateTimeField(blank=True, null=True)),
                ('fecha_fin_suscripcion', models.DateTimeField(blank=True, null=True)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100, null=True)),
                ('calificacion_promedio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_reseñas', models.PositiveIntegerField(default=0)),
                ('activo', models.BooleanField(default=True)),
                ('verificado', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='negocios', to='API.categorianegocio')),
            ],
            options={
                'verbose_name': 'Negocio',
                'verbose_name_plural': 'Negocios',
                'db_table': 'negocios',
            },
        ),
        migrations.CreateModel(
            name='FacturacionSuscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_invoice_id', models.CharField(max_length=100, unique=True)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=100)),
                ('stripe_subscription_id', models.CharField(max_length=100)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('moneda', models.CharField(default='EUR', max_length=3)),
                ('periodo_inicio', models.DateField()),
                ('periodo_fin', models.DateField()),
                ('estado_pago', models.CharField(choices=[('pendiente', 'Pendiente'), ('pagado', 'Pagado'), ('fallido', 'Fallido'), ('reembolsado', 'Reembolsado'), ('cancelado', 'Cancelado')], default='pendiente', max_length=20)),
                ('fecha_vencimiento', models.DateTimeField()),
                ('fecha_pago', models.DateTimeField(blank=True, null=True)),
                ('numero_factura', models.CharField(blank=True, max_length=100, unique=True)),
                ('datos_fiscales', models.JSONField(blank=True, default=dict)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('negocio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facturas', to='API.negocio')),
            ],
            options={
                'verbose_name': 'Facturación de Suscripción',
                'verbose_name_plural': 'Facturaciones de Suscripción',
                'db_table': 'facturacion_suscripcion',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='EmpleadoNegocio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_empleado', models.CharField(choices=[('administrador', 'Administrador'), ('empleado', 'Empleado Regular'), ('consultor', 'Consultor/Freelancer')], default='empleado', max_length=20)),
                ('especialidades', models.TextField(blank=True, help_text='Especialidades del empleado separadas por comas')),
                ('activo', models.BooleanField(default=True)),
                ('fecha_incorporacion', models.DateField(auto_now_add=True)),
                ('fecha_baja', models.DateField(blank=True, null=True)),
                ('puede_crear_citas', models.BooleanField(default=True)),
                ('puede_modificar_citas', models.BooleanField(default=True)),
                ('puede_cancelar_citas', models.BooleanField(default=True)),
                ('puede_gestionar_horarios', models.BooleanField(default=False)),
                ('puede_ver_estadisticas', models.BooleanField(default=False)),
                ('negocio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empleados', to='API.negocio')),
            ],
            options={
                'verbose_name': 'Empleado de Negocio',
                'verbose_name_plural': 'Empleados de Negocio',
                'db_table': 'empleados_negocio',
            },
        ),
        migrations.CreateModel(
            name='BloqueoHorario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_fin', models.DateTimeField()),
                ('tipo_bloqueo', models.CharField(choices=[('vacaciones', 'Vacaciones'), ('festivo', 'Día Festivo'), ('mantenimiento', 'Mantenimiento'), ('personal', 'Motivos Personales'), ('otro', 'Otro')], default='otro', max_length=20)),
                ('motivo', models.TextField(blank=True)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('empleado', models.ForeignKey(blank=True, help_text='Si se especifica, el bloqueo aplica solo a este empleado', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bloqueos', to='API.empleadonegocio')),
                ('negocio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloqueos', to='API.negocio')),
            ],
            options={
                'verbose_name': 'Bloqueo de Horario',
                'verbose_name_plural': 'Bloqueos de Horario',
                'db_table': 'bloqueos_horario',
            },
        ),
        migrations.CreateModel(
            name='ServicioNegocio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True)),
                ('duracion_minutos', models.PositiveIntegerField()),
                ('precio', models.DecimalField(decimal_places=2, max_digits=8)),
                ('requiere_confirmacion', models.BooleanField(default=False)),
                ('disponible_online', models.BooleanField(default=True)),
                ('maximo_por_dia', models.PositiveIntegerField(blank=True, help_text='Límite máximo de este servicio por día', null=True)),
                ('orden', models.PositiveIntegerField(default=0)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('empleados_autorizados', models.ManyToManyField(blank=True, help_text='Si está vacío, todos los empleados pueden realizar este servicio', related_name='servicios_autorizados', to='API.empleadonegocio')),
                ('negocio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicios', to='API.negocio')),
            ],
            options={
                'verbose_name': 'Servicio de Negocio',
                'verbose_name_plural': 'Servicios de Negocio',
                'db_table': 'servicios_negocio',
                'ordering': ['orden', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fecha_hora_inicio', models.DateTimeField()),
                ('fecha_hora_fin', models.DateTimeField()),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente de Confirmación'), ('confirmada', 'Confirmada'), ('en_curso', 'En Curso'), ('completada', 'Completada'), ('cancelada_cliente', 'Cancelada por Cliente'), ('cancelada_negocio', 'Cancelada por Negocio'), ('no_asistio', 'No Asistió')], default='pendiente', max_length=20)),
                ('nombre_cliente', models.CharField(help_text='Nombre completo del cliente para la cita', max_length=200)),
                ('telefono_cliente', models.CharField(max_length=20)),
                ('email_cliente', models.EmailField(max_length=254)),
                ('notas_cliente', models.TextField(blank=True, help_text='Notas adicionales del cliente')),
                ('notas_internas', models.TextField(blank=True, help_text='Notas internas del negocio')),
                ('precio_final', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('recordatorio_enviado', models.BooleanField(default=False)),
                ('confirmacion_enviada', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('fecha_cancelacion', models.DateTimeField(blank=True, null=True)),
                ('cita_original', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reprogramaciones', to='API.cita')),
                ('empleado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas_asignadas', to='API.empleadonegocio')),
                ('negocio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='API.negocio')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='citas', to='API.servicionegocio')),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
                'db_table': 'citas',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('tipo_usuario', models.CharField(choices=[('cliente', 'Cliente'), ('negocio', 'Propietario de Negocio'), ('empleado', 'Empleado'), ('admin', 'Administrador')], default='cliente', max_length=20)),
                ('segundo_nombre', models.CharField(blank=True, max_length=150, verbose_name='Segundo nombre')),
                ('segundo_apellido', models.CharField(blank=True, max_length=150, verbose_name='Segundo apellido')),
                ('genero', models.CharField(blank=True, choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro'), ('N', 'Prefiero no decirlo')], max_length=1)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('telefono', models.CharField(blank=True, help_text='Teléfono principal', max_length=20)),
                ('telefono_alternativo', models.CharField(blank=True, max_length=20)),
                ('direccion', models.CharField(blank=True, max_length=255)),
                ('ciudad', models.CharField(blank=True, max_length=100)),
                ('provincia', models.CharField(blank=True, max_length=100)),
                ('codigo_postal', models.CharField(blank=True, max_length=10)),
                ('pais', models.CharField(default='España', max_length=100)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('biografia', models.TextField(blank=True, help_text='Descripción personal breve', max_length=500)),
                ('notificaciones_email', models.BooleanField(default=True)),
                ('notificaciones_sms', models.BooleanField(default=False)),
                ('notificaciones_push', models.BooleanField(default=True)),
                ('idioma_preferido', models.CharField(default='es', help_text='Código de idioma (es, en, etc.)', max_length=10)),
                ('zona_horaria', models.CharField(default='Europe/Madrid', max_length=50)),
                ('email_verificado', models.BooleanField(default=False)),
                ('telefono_verificado', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('ultima_actividad', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='usuarios', related_query_name='usuario', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='usuarios', related_query_name='usuario', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ReseñaNegocio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calificacion', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comentario', models.TextField(blank=True)),
                ('calificacion_servicio', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('calificacion_atencion', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('calificacion_instalaciones', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('respuesta_negocio', models.TextField(blank=True)),
                ('fecha_respuesta', models.DateTimeField(blank=True, null=True)),
                ('activa', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('cita', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reseña', to='API.cita')),
                ('negocio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñas', to='API.negocio')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reseñas_escritas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reseña de Negocio',
                'verbose_name_plural': 'Reseñas de Negocio',
                'db_table': 'reseñas_negocio',
            },
        ),
        migrations.AddField(
            model_name='negocio',
            name='propietario',
            field=models.ForeignKey(limit_choices_to={'tipo_usuario': 'negocio'}, on_delete=django.db.models.deletion.CASCADE, related_name='negocios_propios', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='empleadonegocio',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empleos', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cita',
            name='cliente',
            field=models.ForeignKey(limit_choices_to={'tipo_usuario': 'cliente'}, on_delete=django.db.models.deletion.CASCADE, related_name='citas_cliente', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='HorarioNegocio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.IntegerField(choices=[(0, 'Lunes'), (1, 'Martes'), (2, 'Miércoles'), (3, 'Jueves'), (4, 'Viernes'), (5, 'Sábado'), (6, 'Domingo')])),
                ('hora_inicio', models.TimeField()),
                ('hora_fin', models.TimeField()),
                ('activo', models.BooleanField(default=True)),
                ('fecha_inicio_vigencia', models.DateField(blank=True, null=True)),
                ('fecha_fin_vigencia', models.DateField(blank=True, null=True)),
                ('negocio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='API.negocio')),
            ],
            options={
                'verbose_name': 'Horario de Negocio',
                'verbose_name_plural': 'Horarios de Negocio',
                'db_table': 'horarios_negocio',
                'unique_together': {('negocio', 'dia_semana', 'fecha_inicio_vigencia')},
            },
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['email'], name='usuarios_email_0ff7b3_idx'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['tipo_usuario'], name='usuarios_tipo_us_3a6d09_idx'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['telefono'], name='usuarios_telefon_20c05e_idx'),
        ),
        migrations.AddIndex(
            model_name='usuario',
            index=models.Index(fields=['ciudad', 'provincia'], name='usuarios_ciudad_2bf31f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reseñanegocio',
            unique_together={('negocio', 'cliente', 'cita')},
        ),
        migrations.AddIndex(
            model_name='negocio',
            index=models.Index(fields=['ciudad', 'categoria'], name='negocios_ciudad_059ca6_idx'),
        ),
        migrations.AddIndex(
            model_name='negocio',
            index=models.Index(fields=['estado_suscripcion'], name='negocios_estado__e7fc1f_idx'),
        ),
        migrations.AddIndex(
            model_name='negocio',
            index=models.Index(fields=['activo', 'verificado'], name='negocios_activo_734bf7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='empleadonegocio',
            unique_together={('usuario', 'negocio')},
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['fecha_hora_inicio', 'estado'], name='citas_fecha_h_be50a9_idx'),
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['negocio', 'fecha_hora_inicio'], name='citas_negocio_ed3d69_idx'),
        ),
        migrations.AddIndex(
            model_name='cita',
            index=models.Index(fields=['cliente', 'estado'], name='citas_cliente_e41976_idx'),
        ),
    ]
